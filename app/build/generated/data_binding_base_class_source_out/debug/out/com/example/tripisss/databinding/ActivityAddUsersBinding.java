// Generated by view binder compiler. Do not edit!
package com.example.tripisss.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tripisss.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddUsersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final ScrollView list;

  @NonNull
  public final Button proceedBtn;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView trip;

  private ActivityAddUsersBinding(@NonNull ConstraintLayout rootView, @NonNull LinearLayout linear,
      @NonNull ScrollView list, @NonNull Button proceedBtn, @NonNull TextView textView,
      @NonNull TextView trip) {
    this.rootView = rootView;
    this.linear = linear;
    this.list = list;
    this.proceedBtn = proceedBtn;
    this.textView = textView;
    this.trip = trip;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddUsersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddUsersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_users, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddUsersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.list;
      ScrollView list = ViewBindings.findChildViewById(rootView, id);
      if (list == null) {
        break missingId;
      }

      id = R.id.proceedBtn;
      Button proceedBtn = ViewBindings.findChildViewById(rootView, id);
      if (proceedBtn == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.trip;
      TextView trip = ViewBindings.findChildViewById(rootView, id);
      if (trip == null) {
        break missingId;
      }

      return new ActivityAddUsersBinding((ConstraintLayout) rootView, linear, list, proceedBtn,
          textView, trip);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
